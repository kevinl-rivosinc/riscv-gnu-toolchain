name: Build

on:
  push:
    branches:
      - daily-ci
  pull_request:
    branches:
      - daily-ci

jobs:
  init-submodules:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2

      - name: Get gcc hash to test
        id: gcc-hash
        run: |
          export GCCHASH=$(git ls-remote git://gcc.gnu.org/git/gcc.git --heads refs/heads/master  | cut -f1)
          echo "GCCHASH=$GCCHASH" >> "$GITHUB_OUTPUT"

      - name: Retrieve cache
        id: retrieve-cache
        uses: actions/cache@v3
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

      - name: Initalize submodules cache
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        run: |
          git submodule init
          rm -rf gcc
          git clone git://gcc.gnu.org/git/gcc.git
          git submodule update --recursive --progress --recommend-shallow

      - name: Save submodules
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

    outputs:
      GCCHASH: ${{ steps.gcc-hash.outputs.GCCHASH }}

  use-submodules:
    runs-on: ubuntu-22.04
    needs: [init-submodules]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

      - name: checkout gcc hash
        run: |
          cd gcc && git checkout ${{ needs.init-submodules.outputs.GCCHASH }} && git pull && cd ..

      - name: install dependencies
        run: sudo ./.github/setup-apt.sh

      - name: make build directory
        run: |
          mkdir build
          cd build
          ../configure --prefix=$(pwd)

      - name: build gcc
        run: |
          cd build
          make -j $(nproc) newlib

        - name: 'Upload Artifact'
          uses: actions/upload-artifact@v3
          with:
            name: gcc-newlib-hash
            path: |
              build/bin
              stamps/build-gcc-newlib-stage2
            retention-days: 5
