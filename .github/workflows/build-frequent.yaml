name: Build

on:
  push:
    branches:
      - daily-ci
  pull_request:
    branches:
      - daily-ci

jobs:
  init-submodules:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2

      - name: Get gcc hash to test
        id: gcc-hash
        run: |
          export GCCHASH=$(git ls-remote git://gcc.gnu.org/git/gcc.git --heads refs/heads/master  | cut -f1)
          echo "GCCHASH=$GCCHASH" >> "$GITHUB_OUTPUT"
          echo $GCCHASH

      - name: Retrieve cache
        id: retrieve-cache
        uses: actions/cache@v3
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

      - name: Initalize submodules cache
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        run: |
          git submodule init
          rm -rf gcc
          git clone git://gcc.gnu.org/git/gcc.git
          git submodule update --recursive --progress --recommend-shallow

      - name: Save submodules
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

    outputs:
      GCCHASH: ${{ steps.gcc-hash.outputs.GCCHASH }}

  check-regressions:
    needs: [init-submodules]
    strategy:
      matrix:
        mode:   [newlib, linux, musl]
        target: [rv32gc-ilp32d, rv64gc-lp64d]
        exclude:
          - mode: musl
            target: rv32gc-ilp32d
    uses: ./.github/workflows/regression-runner.yaml
    with:
      mode: ${{ matrix.mode }}
      target: ${{ matrix.target }}
      GCCHASH: ${{ needs.init-submodules.outputs.GCCHASH }}
