name: Build

# on:
#   push:
#     branches:
#       - daily-ci
#   pull_request:
#     branches:
#       - daily-ci

jobs:
  init-submodules:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2

      - name: Get gcc hash to test
        id: gcc-hash
        run: |
          export GCCHASH=$(git ls-remote git://gcc.gnu.org/git/gcc.git --heads refs/heads/master  | cut -f1)
          echo "GCCHASH=$GCCHASH" >> "$GITHUB_OUTPUT"
          echo $GCCHASH

      - name: Retrieve cache
        id: retrieve-cache
        uses: actions/cache@v3
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

      - name: Initalize submodules cache
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        run: |
          git submodule init
          rm -rf gcc
          git clone git://gcc.gnu.org/git/gcc.git
          git submodule update --recursive --progress --recommend-shallow

      - name: Save submodules
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

    outputs:
      GCCHASH: ${{ steps.gcc-hash.outputs.GCCHASH }}

  build-gcc:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        mode:   [newlib, linux, musl]
        target: [rv32gc-ilp32d, rv64gc-lp64d]
        exclude:
          - mode: musl
            target: rv32gc-ilp32d
    needs: [init-submodules]
    steps:
      - uses: actions/checkout@v2

      - name: Load submodules from cache
        uses: actions/cache@v3
        id: restore-build
        with:
          path: |
            binutils
            dejagnu
            gcc
            gdb
            glibc
            llvm
            musl
            newlib
            pk
            qemu
          key: submodules

      - name: Checkout gcc hash
        run: |
          cd gcc && git fetch && git checkout ${{ needs.init-submodules.outputs.GCCHASH }} && cd ..

      - name: Install dependencies
        run: sudo ./.github/setup-apt.sh

      - name: Configure
        run: |
          mkdir build
          cd build
          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
          CONFIGURE_TOOLCHAIN="../configure --prefix=$(pwd) --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]}"
          $CONFIGURE_TOOLCHAIN

      - name: Make gcc
        run: |
          cd build
          make -j $(nproc) ${{ matrix.mode }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: gcc-${{ matrix.mode }}-${{ matrix.target }}-${{ needs.init-submodules.outputs.GCCHASH }}
          path: |
            build/bin
            build/build-gcc-${{ matrix.mode }}-stage2
          retention-days: 5
